{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./config/i18n.js","webpack:///./src/components/LanguageSwitch.js","webpack:///./src/intl/index.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","nb","url","path","locale","htmlLang","ogLang","dateFormat","siteTitle","siteDescription","siteHeadline","languageTitle","en","LanguageSwitch","translations","locales","react_default","className","keys","map","key","item","gatsby_browser_entry","to","intl","addLocaleData","concat","Layout","primaryMenu","allWordpressHeyMenus","edges","filter","node","index_es","messages","intlTranslations","Fragment","items","wordpress_id","style","margin","maxWidth","padding","paddingTop","components_LanguageSwitch","Date","getFullYear","href","_1434247973","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-cbe12e3b8dce0dca1675.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn't exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = {\n  nb: {\n    url: \"/\",\n    default: true,\n    path: \"no\",\n    locale: \"nb-no\",\n    htmlLang: \"nb\",\n    ogLang: \"nb_NO\",\n    dateFormat: \"DD.MM.YYYY\",\n    siteTitle: \"Øya\",\n    siteDescription: `Øya`,\n    siteHeadline: \"Øya\",\n    languageTitle: \"NO\",\n  },\n  en: {\n    url: \"/en/\",\n    default: false,\n    path: \"en\",\n    locale: \"en-us\",\n    htmlLang: \"en\",\n    ogLang: \"en_US\",\n    dateFormat: \"DD/MM/YYYY\",\n    siteTitle: \"Øya\",\n    siteDescription: `Øya`,\n    siteHeadline: \"Øya\",\n    languageTitle: \"EN\",\n  },\n}\n","import React from \"react\"\nimport locales from \"../../config/i18n\"\nimport { Link } from \"gatsby\"\n\n// const defaultTranslations = () => {\n//   return Object.keys(locales).map(item => {\n\n//   })\n// }\n\nconst LanguageSwitch = ({ translations }) => {\n  if (!translations) {\n    translations = locales\n  }\n  return (\n    <ul className=\"LanguageSwitch\">\n      {Object.keys(translations).map(key => {\n        let item = translations[key]\n        if (!item) {\n          if (locales[key]) {\n            item = locales[key]\n          } else {\n            return null\n          }\n        }\n        return (\n          <li className=\"LanguageSwitch__item\" key={`lang-switch-item-${key}`}>\n            <Link className=\"LanguageSwitch__link\" to={item.url}>\n              {locales[key].languageTitle}\n            </Link>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default LanguageSwitch\n","import nb from \"./nb.json\"\nimport en from \"./en.json\"\n\nexport default { nb, en }\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport LanguageSwitch from \"../components/LanguageSwitch\"\n\n/**\n * React intl setup\n */\nimport { IntlProvider, addLocaleData } from \"react-intl\"\nimport en from \"react-intl/locale-data/en\"\nimport nb from \"react-intl/locale-data/nb\"\nimport intlTranslations from \"../intl\"\n\naddLocaleData([...en, ...nb])\n\nconst Layout = ({ children, locale, translations }) => {\n  if (!locale) {\n    locale = \"nb\"\n  }\n  return (\n    <StaticQuery\n      query={graphql`\n        {\n          allWordpressHeyMenus {\n            edges {\n              node {\n                location\n                locale\n                items {\n                  url\n                  wordpress_id\n                  title\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const menus = data.allWordpressHeyMenus.edges\n        const primaryMenu = menus.filter(item => {\n          return item.node.locale === locale && item.node.location === \"primary\"\n        })\n\n        return (\n          <IntlProvider messages={intlTranslations[locale]} locale={locale}>\n            <>\n              {primaryMenu && primaryMenu[0] && primaryMenu[0].node && (\n                <ul>\n                  {primaryMenu[0].node.items.map(item => {\n                    return (\n                      <li key={item.wordpress_id}>\n                        <Link to={item.url}>{item.title}</Link>\n                      </li>\n                    )\n                  })}\n                </ul>\n              )}\n              <div\n                style={{\n                  margin: `0 auto`,\n                  maxWidth: 960,\n                  padding: `0px 1.0875rem 1.45rem`,\n                  paddingTop: 0,\n                }}\n              >\n                <LanguageSwitch translations={translations} />\n                <main>{children}</main>\n                <footer>\n                  © {new Date().getFullYear()}, Built with{\" \"}\n                  <a href=\"https://www.gatsbyjs.org\">Gatsby</a> |{\" \"}\n                  <a href=\"/about\">About Us</a>\n                </footer>\n              </div>\n            </>\n          </IntlProvider>\n        )\n      }}\n    />\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}