{"version":3,"sources":["webpack:///./src/templates/category.js","webpack:///./src/components/NewsCard.js","webpack:///./src/components/YearSelect.js","webpack:///./src/components/PostCategoryNav.js","webpack:///./src/components/BlogPage.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_BlogPage__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_ref","data","pageContext","page","wordpressPage","locale","posts","allWordpressPost","edges","map","item","node","a","createElement","translations","options","wordpressHeyAcfoptions","settings","wordpressHeySettings","NewsCard","render","_this$props","this","props","post","i","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","link","className","_utils__WEBPACK_IMPORTED_MODULE_4__","featured_image","Object","assign","maxWidth","date","stripTags","content","title","Component","YearSelect","year","react_default","index_es","id","defaultMessage","text","cc","YearSelect--active","value","onChange","event","preventDefault","target","navigate","getArchiveLink","getBlogYearRange","key","PostCategoryNav","_949050307","utils","ctx","state","cats","allWordpressHeyCategories","filter","edge","gatsby_browser_entry","activeClassName","cat","term_id","getCategoryLink","slug","name","components_YearSelect","BlogPage","components_PostCategoryNav","wordpress_id"],"mappings":"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","file":"component---src-templates-category-js-72e3c937eb6cf1ec6d5a.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport BlogPage from \"../components/BlogPage\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data, pageContext }) => {\n  const page = data.wordpressPage\n  const { locale } = pageContext\n  const posts = data.allWordpressPost.edges.map(item => item.node)\n\n  return (\n    <Layout\n      locale={locale}\n      translations={page.translations}\n      options={data.wordpressHeyAcfoptions}\n      settings={data.wordpressHeySettings}\n    >\n      <BlogPage posts={posts} page={page} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($id: [Int], $locale: String!) {\n    wordpressPage(template: { eq: \"blog\" }, locale: { eq: $locale }) {\n      title\n      content\n      link\n    }\n\n    wordpressHeyAcfoptions(locale: { eq: $locale }) {\n      locale\n      options {\n        url_app_download_android\n        url_app_download_ios\n        tickets_button_text\n        tickets_sold_out\n        tickets_url\n        partners_main {\n          title {\n            rendered\n          }\n        }\n      }\n    }\n\n    wordpressHeySettings(locale: { eq: $locale }) {\n      locale\n      page_for_posts {\n        wordpress_id\n      }\n    }\n\n    allWordpressPost(\n      limit: 40\n      filter: { categories: { in: $id }, locale: { eq: $locale } }\n    ) {\n      edges {\n        node {\n          title\n          link\n          wordpress_id\n          excerpt\n          date\n          featured_image {\n            title\n            filename\n            filesize\n            url\n            link\n            alt\n            author\n            description\n            caption\n            name\n            status\n            uploaded_to\n            date\n            modified\n            menu_order\n            mime_type\n            type\n            subtype\n            icon\n            width\n            height\n            sizes {\n              thumbnail\n              thumbnail_width\n              thumbnail_height\n              medium\n              medium_width\n              medium_height\n              medium_large\n              medium_large_width\n              medium_large_height\n              large\n              large_width\n              large_height\n              small\n              small_width\n              small_height\n              medium_small\n              medium_small_width\n              medium_small_height\n              xlarge\n              xlarge_width\n              xlarge_height\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n// wordpressHeyCategories(term_id: { eq: $id }) {\n//   name\n//   term_id\n// }\n\n// wordpressHeyCategories(term_id: { eq: $id }) {\n//   name\n// }\n\n// allWordpressPost(filter: { categories: { in: $id } }) {\n//   edges {\n//     node {\n//       title\n//     }\n//   }\n// }\n","import React, { Component } from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { FeaturedImageAspect, Overlay, PostDate, Html, Doodle } from \"./utils\"\n\nexport default class NewsCard extends Component {\n  render() {\n    const { post, i } = this.props\n    return (\n      <Link to={post.link} className=\"NewsCards__item\">\n        <Doodle>\n          {post.featured_image ? (\n            <div className=\"NewsCards__image\">\n              <Overlay i={i}>\n                <FeaturedImageAspect\n                  {...post.featured_image}\n                  className=\"aspect-sm--landscape\"\n                  maxWidth={1000}\n                />\n              </Overlay>\n            </div>\n          ) : (\n            <div className=\"NewsCards__placeholder aspect aspect-sm--landscape\" />\n          )}\n          <div className=\"NewsCards__content\">\n            <small>\n              <PostDate className=\"NewsCards__date\" date={post.date} />\n            </small>\n            <h3 className=\"NewsCards__title\">\n              <Html stripTags={true} content={post.title} />\n            </h3>\n            {/* <div className=\"NewsCards__excerpt\">\n              <Html stripTags={true} content={post.excerpt} />\n            </div> */}\n          </div>\n        </Doodle>\n      </Link>\n    )\n  }\n}\n","import React from \"react\"\nimport { getBlogYearRange } from \"../utils/functions\"\nimport { FormattedMessage } from \"react-intl\"\nimport { navigate } from \"gatsby\"\nimport { getArchiveLink } from \"../../config/site\"\nimport cc from \"classcat\"\n\nconst YearSelect = ({ year, locale, page }) => {\n  return (\n    <FormattedMessage id=\"blog.allYears\" defaultMessage=\"Archive\">\n      {text => (\n        <select\n          className={cc({\n            YearSelect: true,\n            \"YearSelect--active\": year ? true : false,\n          })}\n          value={year}\n          onChange={event => {\n            event.preventDefault()\n            if (!event.target.value) {\n              navigate(page.link)\n            } else {\n              navigate(getArchiveLink(locale, event.target.value))\n            }\n          }}\n        >\n          <option value=\"\">{text}</option>\n          {getBlogYearRange().map(year => {\n            return (\n              <option key={`YearOption-${year}`} value={year}>\n                {year}\n              </option>\n            )\n          })}\n        </select>\n      )}\n    </FormattedMessage>\n  )\n}\n\nexport default YearSelect\n","import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { AppConsumer } from \"./utils\"\nimport { getCategoryLink } from \"../../config/site\"\nimport YearSelect from \"./YearSelect\"\nimport { FormattedMessage } from \"react-intl\"\n\nconst PostCategoryNav = ({ year, page }) => {\n  const data = useStaticQuery(graphql`\n    {\n      allWordpressHeyCategories {\n        edges {\n          node {\n            name\n            slug\n            term_id\n            locale\n            count\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <AppConsumer>\n      {ctx => {\n        const { locale } = ctx.state\n        const cats = data.allWordpressHeyCategories.edges\n          .filter(edge => edge.node.locale === locale)\n          .map(edge => edge.node)\n        return (\n          <ul className=\"PostCategoryNav\">\n            <li className=\"PostCategoryNav__item\">\n              <Link\n                className=\"PostCategoryNav__link\"\n                activeClassName=\"PostCategoryNav__link--active\"\n                to={page.link}\n              >\n                <FormattedMessage id=\"categories.all\" defaultMessage=\"Latest\" />\n              </Link>\n            </li>\n            {cats.map(cat => {\n              return (\n                <li\n                  key={`CategoryLink-${cat.term_id}`}\n                  className=\"PostCategoryNav__item\"\n                >\n                  <Link\n                    className=\"PostCategoryNav__link\"\n                    activeClassName=\"PostCategoryNav__link--active\"\n                    to={getCategoryLink(cat.locale, cat.slug)}\n                  >\n                    {cat.name}\n                  </Link>\n                </li>\n              )\n            })}\n            <li className=\"PostCategoryNav__item\">\n              <YearSelect year={year} locale={locale} page={page} />\n            </li>\n          </ul>\n        )\n      }}\n    </AppConsumer>\n  )\n}\n\nexport default PostCategoryNav\n","import React from \"react\"\nimport { Html } from \"./utils/\"\nimport NewsCard from \"./NewsCard\"\nimport PostCategoryNav from \"./PostCategoryNav\"\n\nconst BlogPage = ({ posts, page, year }) => {\n  const { title, content } = page\n  return (\n    <article className=\"BlogPage\">\n      <header className=\"BlogPage__header\">\n        <h1 className=\"BlogPage__title\">\n          <Html content={title} />\n        </h1>\n        {content && (\n          <div className=\"BlogPage__intro\">\n            <Html content={content} />\n          </div>\n        )}\n        <div className=\"BlogPage__nav\">\n          <PostCategoryNav year={year} page={page} />\n        </div>\n      </header>\n      <div className=\"BlogPage__content\">\n        <div className=\"NewsCards\">\n          {posts.map((post, i) => (\n            <NewsCard key={`NewsCard-${post.wordpress_id}`} post={post} i={i} />\n          ))}\n        </div>\n      </div>\n    </article>\n  )\n}\n\nexport default BlogPage\n"],"sourceRoot":""}