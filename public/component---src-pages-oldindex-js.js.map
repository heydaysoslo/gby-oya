{"version":3,"sources":["webpack:///./src/pages/oldindex.js","webpack:///./src/components/seo.js"],"names":["pageQuery","IndexPage","render","data","this","props","wordpressPage","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","locale","translations","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","keywords","acf","poster_sections","map","section","poster_lists","row","artists","artist","rendered","allWordpressPost","totalCount","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","edges","_ref","node","key","id","link","dangerouslySetInnerHTML","__html","date","excerpt","Component","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_3__","query","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps"],"mappings":"+LAMO,IAAMA,EAAS,aA+ChBC,kLACJC,OAAA,WAAS,IACCC,EAASC,KAAKC,MAAdF,KACAG,EAAkBH,EAAlBG,cACR,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,OAAQL,EAAcK,OACtBC,aAAcN,EAAcM,cAE5BL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAU,mCAC3BT,EAAcU,IAAIC,iBACjBX,EAAcU,IAAIC,gBAAgBC,IAAI,SAAAC,GACpC,OACEZ,EAAAC,EAAAC,cAAA,eACGU,EAAQC,aAAaF,IAAI,SAAAG,GACxB,OACEd,EAAAC,EAAAC,cAAA,UACGY,EAAIC,QAAQJ,IAAI,SAAAK,GACf,OAAOhB,EAAAC,EAAAC,cAAA,UAAKc,EAAOT,MAAMU,kBAQzCjB,EAAAC,EAAAC,cAAA,sBACaN,EAAKsB,iBAAiBC,WADnC,mBAC+D,IAC7DnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAG,UAAT,YAEDzB,EAAKsB,iBAAiBI,MAAMX,IAAI,SAAAY,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAC/BxB,EAAAC,EAAAC,cAAA,OAAKuB,IAAKD,EAAKE,IACb1B,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMC,GAAIG,EAAKG,MACb3B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAM0B,wBAAyB,CAAEC,OAAQL,EAAKjB,SADhD,KAC8D,IAC3DiB,EAAKM,OAGV9B,EAAAC,EAAAC,cAAA,OAAK0B,wBAAyB,CAAEC,OAAQL,EAAKO,mBAtCjCC,aA8CTtC,sGC9Ff,SAASuC,EAATV,GAA2D,IAA5CW,EAA4CX,EAA5CW,YAAaC,EAA+BZ,EAA/BY,KAAMC,EAAyBb,EAAzBa,KAAM5B,EAAmBe,EAAnBf,SAAUD,EAASgB,EAAThB,MAChD,OACEP,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CACEC,MAAOC,EACP5C,OAAQ,SAAAC,GACN,IAAM4C,EACJN,GAAetC,EAAK6C,KAAKC,aAAaR,YACxC,OACElC,EAAAC,EAAAC,cAACyC,EAAA1C,EAAD,CACE2C,eAAgB,CACdT,QAEF5B,MAAOA,EACPsC,cAAa,QAAUjD,EAAK6C,KAAKC,aAAanC,MAC9C6B,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASxC,GAEX,CACEyC,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASnD,EAAK6C,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAASxC,GAEX,CACEuC,KAAI,sBACJC,QAASP,IAGVU,OACC1C,EAAS2C,OAAS,EACd,CACEL,KAAI,WACJC,QAASvC,EAAS4C,KAAT,OAEX,IAELF,OAAOd,MAtDlBxC,KAAAyD,IA8DJpB,EAAIqB,aAAe,CACjBnB,KAAI,KACJC,KAAM,GACN5B,SAAU,IAWGyB,MAEf,IAAMM,EAAY","file":"component---src-pages-oldindex-js.js","sourcesContent":["import React, { Component } from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport const pageQuery = graphql`\n  query {\n    wordpressPage(wordpress_id: { eq: 22754 }) {\n      title\n      locale\n      acf {\n        poster_sections {\n          poster_lists {\n            artists {\n              title {\n                rendered\n              }\n            }\n          }\n        }\n      }\n      translations {\n        en {\n          url\n        }\n        nb {\n          url\n        }\n      }\n    }\n    allWordpressPost(\n      sort: { fields: [date], order: DESC }\n      limit: 10\n      filter: { locale: { eq: \"nb\" } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          title\n          excerpt\n          slug\n          date(formatString: \"Do MMMM\")\n          type\n          locale\n          link\n        }\n      }\n    }\n  }\n`\n\nclass IndexPage extends Component {\n  render() {\n    const { data } = this.props\n    const { wordpressPage } = data\n    return (\n      <Layout\n        locale={wordpressPage.locale}\n        translations={wordpressPage.translations}\n      >\n        <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n        {wordpressPage.acf.poster_sections &&\n          wordpressPage.acf.poster_sections.map(section => {\n            return (\n              <section>\n                {section.poster_lists.map(row => {\n                  return (\n                    <ul>\n                      {row.artists.map(artist => {\n                        return <li>{artist.title.rendered}</li>\n                      })}\n                    </ul>\n                  )\n                })}\n              </section>\n            )\n          })}\n        <p>\n          There are {data.allWordpressPost.totalCount} posts in total.{\" \"}\n          <Link to=\"/posts\">See all</Link>\n        </p>\n        {data.allWordpressPost.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link to={node.link}>\n              <h4>\n                <span dangerouslySetInnerHTML={{ __html: node.title }} /> -{\" \"}\n                {node.date}\n              </h4>\n            </Link>\n            <div dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n          </div>\n        ))}\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}